buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {

}

minecraft {


    mappings channel: 'official', version: "$project.minecraft_version"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {
        client {
            workingDirectory project.file('run')
			arg "-mixin.config=${mod_id}-mixins.json"
                  // This makes dependencies with mixins work
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
			arg "-mixin.config=${mod_id}-mixins.json"
                  // This makes dependencies with mixins work
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
			arg "-mixin.config=${mod_id}-mixins.json"
                  // This makes dependencies with mixins work
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {


    minecraft([
            group  : "net.minecraftforge",
            name   : 'forge',
            version: "$project.minecraft_version-${project.forgeversion}"
    ])    
	
	//annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
	
	if (System.getProperty("idea.sync.active") != "true") {
	annotationProcessor 'org.spongepowered:mixin:0.8.3:processor' 
	}

}


jar {
    manifest {
        attributes([
                "MixinConnector": "com.robertx22.temporary_spawners.main.MixinConnector",
                "MixinConfigs"  : "temporary_spawners-mixins.json"
        ])
    }
}

// CURSEFORGE STUFF

curseforge {

    def curseProp = new Properties()
    File secretPropsFile = file("key.properties")
    curseProp.load(secretPropsFile.newInputStream())

    project {
        apiKey = curseProp.getProperty('curseKey')
        id = "${curse_id}"
        releaseType = "${curse_release}"
        changelogType = 'text'
        changelog = file('CHANGELOG.txt')
        addGameVersion("${project.minecraft_version}")
        addGameVersion("Forge")
        addGameVersion("Java 8")

        mainArtifact(jar)       
    }
    options {
        forgeGradleIntegration = true
    }
}

apply plugin: 'org.spongepowered.mixin'
mixin {
    add sourceSets.main, "${mod_id}-refmap.json"
}

